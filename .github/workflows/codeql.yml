name: "CodeQL – C & C++ Coding-Standards"

on:
  pull_request:
    branches: [ "main", "master" ]
    types:  [ opened, synchronize, reopened ]
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  coding-standards:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      security-events: write
      actions:  read
      contents: read

    steps:
    # ───────── Repo setup ─────────
    - name: Checkout workflow repo
      uses: actions/checkout@v4
      with:
        path: workflow-repo
        fetch-depth: 0

    - name: Checkout CodeQL Coding Standards
      uses: actions/checkout@v4
      with:
        repository: github/codeql-coding-standards
        path: workflow-repo/codeql-coding-standards
        fetch-depth: 1

    # ───────── Source checkout ─────────
    - name: Clone PR source repo
      if: github.event_name == 'pull_request'
      run: |
        git clone --depth 1 "${{ github.event.pull_request.head.repo.clone_url }}" pr-code
        cd pr-code
        git fetch origin "${{ github.event.pull_request.head.sha }}"
        git checkout       "${{ github.event.pull_request.head.sha }}"

    - name: "Fallback: use current repo (push)"
      if: github.event_name != 'pull_request'
      run: |
        mkdir pr-code
        rsync -a --exclude .git ./ pr-code/

    # ───────── Pick one file to compile ─────────
    - name: Pick one C/C++ file
      id: pick
      working-directory: pr-code
      run: |
        FILE=$(find . -name '*.cpp' -o -name '*.c' | head -n 1)
        if [ -z "$FILE" ]; then
          echo 'int main(){return 0;}' > dummy.cpp
          FILE=dummy.cpp
        fi
        echo "FILE=$FILE" >> $GITHUB_OUTPUT

    # ───────── Init CodeQL (no autobuild) ─────────
    - name: Init CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: c-cpp
        build-mode: none   # we handle our own minimal build

    - name: Locate CodeQL CLI
      run: echo "CODEQL_CLI=$(which codeql)" >> $GITHUB_ENV

    # ───────── Install only needed packs ─────────
    - name: Install selected packs
      run: |
        for pack in \
          workflow-repo/codeql-coding-standards/cpp/common/src \
          workflow-repo/codeql-coding-standards/cpp/cert/src   \
          workflow-repo/codeql-coding-standards/cpp/autosar/src\
          workflow-repo/codeql-coding-standards/cpp/misra/src  \
          workflow-repo/codeql-coding-standards/c/common/src   \
          workflow-repo/codeql-coding-standards/c/cert/src     \
          workflow-repo/codeql-coding-standards/c/misra/src
        do
          $CODEQL_CLI pack install "$pack"
        done

    # ───────── Minimal compile & create DB ─────────
    - name: Compile single file & create DB
      working-directory: pr-code
      run: |
        g++ -c "${{ steps.pick.outputs.FILE }}" -o compile.o
        $CODEQL_CLI database create coding-standards-db \
          --language=c-cpp \
          --command="g++ -c ${{ steps.pick.outputs.FILE }} -o compile.o" \
          --overwrite

    # ───────── Analyze ─────────
    - name: Analyze coding-standards packs
      working-directory: pr-code
      run: |
        $CODEQL_CLI database analyze coding-standards-db \
          ../workflow-repo/codeql-coding-standards/cpp/common/src \
          ../workflow-repo/codeql-coding-standards/cpp/cert/src   \
          ../workflow-repo/codeql-coding-standards/cpp/autosar/src\
          ../workflow-repo/codeql-coding-standards/cpp/misra/src  \
          ../workflow-repo/codeql-coding-standards/c/common/src   \
          ../workflow-repo/codeql-coding-standards/c/cert/src     \
          ../workflow-repo/codeql-coding-standards/c/misra/src    \
          --format=sarif-latest \
          --output=cert-results.sarif \
          --threads=$(nproc) \
          --sarif-category=coding-standards

    # ───────── Upload results ─────────
    - name: Upload SARIF to Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: pr-code/cert-results.sarif
        category: coding-standards

    - name: Attach SARIF artifact
      uses: actions/upload-artifact@v4
      with:
        name: coding-standards-sarif
        path: pr-code/cert-results.sarif
