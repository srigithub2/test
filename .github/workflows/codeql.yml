  coding-standards:
    name: Coding-Standards (CERT + AUTOSAR)
    needs: security-extended          # keep if you want serial; drop for parallel
    runs-on: ubuntu-latest            # switch to self-hosted for faster builds
    timeout-minutes: 180
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
    ## 1 – check out the workflow repo (needed for config / packs)
    - uses: actions/checkout@v4
      with:
        path: workflow-repo           # keep workflow files separate

    ## 2 – clone the PR source repo and check out the PR HEAD commit
    - name: Checkout PR source repo
      if: github.event_name == 'pull_request'
      run: |
        git clone --depth 1 \
          "${{ github.event.pull_request.head.repo.clone_url }}" pr-code
        cd pr-code
        git fetch origin \
          ${{ github.event.pull_request.base.ref }} \
          ${{ github.event.pull_request.head.sha }}
        git checkout ${{ github.event.pull_request.head.sha }}

    ## fallback for push / manual runs (code is in the same repo)
    - name: Use current repo for push event
      if: github.event_name != 'pull_request'
      run: |
        mkdir pr-code
        rsync -a --exclude .git ./ pr-code/

    - name: Write CodeQL config
      run: |
        cat <<'YML' > pr-code/.github/codeql-config.yml
        paths-ignore:
          - third_party/**
          - generated/**
        YML

    - name: Init CodeQL (C + C++)
      uses: github/codeql-action/init@v3
      with:
        languages: c-cpp
        config-file: pr-code/.github/codeql-config.yml
        packs: |
          github/codeql-coding-standards/cpp/cert
          github/codeql-coding-standards/cpp/autosar
          github/codeql-coding-standards/c/misra

    # ── install packs (same as before) ─────────────────────────────
    - name: Install Coding-Standards packs
      run: |
        cd workflow-repo/codeql-coding-standards/cpp/common/src && codeql pack install && cd -
        cd workflow-repo/codeql-coding-standards/cpp/cert/src   && codeql pack install && cd -
        cd workflow-repo/codeql-coding-standards/c/misra/src    && codeql pack install && cd -

    # ── compile only changed C/C++ files ──────────────────────────
    - name: Build changed files (or dummy)
      working-directory: pr-code
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          BASE=${{ github.event.pull_request.base.sha }}
          HEAD=${{ github.event.pull_request.head.sha }}
          CHANGED=$(git diff --name-only "$BASE" "$HEAD" | grep -E '\.(c|cpp|cc|cxx|h|hpp|hxx)$' || true)
        else
          CHANGED=$(git ls-files '*.[ch]pp' '*.[ch]' || true)
        fi

        if [ -z "$CHANGED" ]; then
          echo 'int main(){return 0;}' > dummy.cpp
          g++ -c dummy.cpp
          BUILD_CMD="g++ -c dummy.cpp"
        else
          for f in $CHANGED; do
            g++ -c "$f" || true
          done
          BUILD_CMD="g++ -c $CHANGED"
        fi
        echo "BUILD_CMD=$BUILD_CMD" >> $GITHUB_ENV

    # ── create database from that build ───────────────────────────
    - name: Create CodeQL database
      working-directory: pr-code
      run: |
        codeql database create coding-standards-db \
          --language=c-cpp \
          --command="$BUILD_CMD"

    # ── analyze with full packs ───────────────────────────────────
    - name: Analyze (CERT + AUTOSAR + MISRA)
      working-directory: pr-code
      run: |
        codeql database analyze coding-standards-db \
          --format=sarif-latest \
          --output=cert-results.sarif \
          --sarif-category=coding-standards

    - name: Upload SARIF to Security Tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: pr-code/cert-results.sarif
        category: coding-standards

    - name: Upload SARIF as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coding-standards-sarif
        path: pr-code/cert-results.sarif
