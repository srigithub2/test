name: "CodeQL – Coding‑Standards Only"

on:
  pull_request:
    branches: [ "main", "master" ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:

jobs:
  coding-standards:
    name: Coding‑Standards (CERT + AUTOSAR + MISRA‑C)
    runs-on: ubuntu-latest
    timeout-minutes: 180
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v4
        with:
          path: workflow-repo
          fetch-depth: 0

      - name: Clone PR source repo
        if: github.event_name == 'pull_request'
        run: |
          git clone --depth 1 "${{ github.event.pull_request.head.repo.clone_url }}" pr-code
          cd pr-code
          git fetch origin "${{ github.event.pull_request.head.sha }}"
          git checkout "${{ github.event.pull_request.head.sha }}"

      - name: Fallback: use current repo (push)
        if: github.event_name != 'pull_request'
        run: |
          mkdir pr-code
          rsync -a --exclude .git ./ pr-code/

      - name: Write CodeQL config
        run: |
          mkdir -p pr-code/.github
          echo "paths-ignore:" > pr-code/.github/codeql-config.yml
          echo "  - third_party/**" >> pr-code/.github/codeql-config.yml
          echo "  - generated/**" >> pr-code/.github/codeql-config.yml

      - name: Init CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: c-cpp
          config-file: pr-code/.github/codeql-config.yml

      - name: Install coding-standards packs
        run: |
          cd workflow-repo/codeql-coding-standards/cpp/common/src && codeql pack install && cd -
          cd workflow-repo/codeql-coding-standards/cpp/cert/src && codeql pack install && cd -
          cd workflow-repo/codeql-coding-standards/cpp/autosar/src && codeql pack install && cd -
          cd workflow-repo/codeql-coding-standards/c/misra/src && codeql pack install && cd -

      - name: Build changed files
        working-directory: pr-code
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.event.pull_request.head.sha }}"
            CHANGED=$(git diff --name-only "$BASE" "$HEAD" | grep -E '\.(c|cpp|cc|cxx|h|hpp|hxx)$' || true)
          else
            CHANGED=$(git ls-files '*.[ch]pp' '*.[ch]' || true)
          fi
          if [ -z "$CHANGED" ]; then
            echo 'int main(){return 0;}' > dummy.cpp
            g++ -c dummy.cpp
            echo "BUILD_CMD=g++ -c dummy.cpp" >> $GITHUB_ENV
          else
            for f in $CHANGED; do g++ -c "$f" || true; done
            echo "BUILD_CMD=g++ -c $CHANGED" >> $GITHUB_ENV
          fi

      - name: Create CodeQL database
        working-directory: pr-code
        run: |
          ${{ env.BUILD_CMD }}
          codeql database create coding-standards-db \
            --language=c-cpp \
            --command="${{ env.BUILD_CMD }}"

      - name: Analyze coding-standards packs
        working-directory: pr-code
        run: |
          codeql database analyze coding-standards-db \
            workflow-repo/codeql-coding-standards/cpp/cert/src \
            workflow-repo/codeql-coding-standards/cpp/autosar/src \
            workflow-repo/codeql-coding-standards/c/misra/src \
            --format=sarif-latest \
            --output=cert-results.sarif \
            --sarif-category=coding-standards

      - name: Check SARIF exists
        working-directory: pr-code
        run: |
          test -f cert-results.sarif && echo "SARIF ready." || (echo "SARIF missing!" && exit 1)

      - name: Upload SARIF to Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pr-code/cert-results.sarif
          category: coding-standards

      - name: Upload SARIF artifact
        uses: actions/upload-artifact@v4
        with:
          name: coding-standards-sarif
          path: pr-code/cert-results.sarif
